# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type User {
  id: Float!
  email: String!
  name: String
  role: String!
}

type AuthToken {
  accessToken: String
  refreshToken: String
}

type AuthTokenResponse {
  authToken: AuthToken!
  user: User
  error: String
}

type Todo {
  createdAt: DateTime!
  updatedAt: DateTime!
  id: Float!
  title: String!
  content: String
  userId: Float!
  done: Boolean!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Query {
  findUsers: [User!]!
  user(id: Int!): User!
  findTodos: [Todo!]!
  todosByUserId(id: Float!): [Todo!]!
  todo(id: Int!): Todo!
  queryTodos(searchString: String, page: Float, limit: Float, orderBy: TodoOrder, userId: Float!): [Todo!]!
}

input TodoOrder {
  createdAt: SortOrder!
}

enum SortOrder {
  asc
  desc
}

type Mutation {
  createOne(createUserInput: CreateUserInput!): User!
  login(createUserInput: LoginUserInput!): AuthTokenResponse!
  updateUser(id: Float!, updateUserInput: UpdateUserInput!): User!
  removeUser(id: Int!): User!
  CreateTodo(createTodoInput: CreateTodoInput!): Todo!
  updateTodo(id: Float!, updateTodoInput: UpdateTodoInput!): Todo!
  removeTodo(id: Int!): Todo!
}

input CreateUserInput {
  name: String!
  email: String!
  password: String!
}

input LoginUserInput {
  email: String!
  password: String!
}

input UpdateUserInput {
  email: String
  name: String
  password: String
}

input CreateTodoInput {
  title: String!
  content: String
  userId: Float!
  done: Boolean!
}

input UpdateTodoInput {
  title: String
  content: String
  done: Boolean
  userId: Float
}